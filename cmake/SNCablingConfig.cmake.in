# - Config file for the Vire package
# It defines the following variables
#  SNCabling_VERSION            - SNCabling version
#  SNCabling_VERSION_REVISION   - SNCabling version revision
#  SNCabling_WITH_DEVELOPER_TOOLS - SNCabling is built with development tools
#  SNCabling_INCLUDE_DIRS       - SNCabling include directories
#  SNCabling_CMAKE_CONFIG_DIR   - SNCabling CMake config path
#

#----------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#----------------------------------------------------------------------

message(STATUS "[info] SNCablingConfig.cmake: Entering...")

# - Core API version
set(SNCabling_VERSION "@SNCabling_VERSION@")
# - Development Tag
set(SNCabling_VERSION_REVISION "@SNCabling_VERSION_REVISION@")
# - SNCabling cmake-config path is stored to help explicit path resolution in client packages:
set(SNCabling_CMAKE_CONFIG_DIR "${CMAKE_CURRENT_LIST_DIR}")
set(SNCabling_WITH_DEVELOPER_TOOLS "@SNCABLING_WITH_DEVELOPER_TOOLS@")
set(SNCabling_DOCS_FOUND            "@SNCABLING_WITH_DOCS@")
set(SNCabling_WITH_SERVICE          "@SNCABLING_WITH_SERVICE@")
set(SNCabling_WITH_BAYEUX_DEPENDENCY "@SNCABLING_WITH_BAYEUX_DEPENDENCY@")

message(STATUS "[info] SNCablingConfig.cmake: SNCabling_VERSION          = '${SNCabling_VERSION}'")
message(STATUS "[info] SNCablingConfig.cmake: SNCabling_VERSION_REVISION = '${SNCabling_VERSION_REVISION}'")

# Component Availability

#-----------------------------------------------------------------------
# Start of CMake Generated
@PACKAGE_INIT@
# END OF CMAKE GENERATED

#-----------------------------------------------------------------------
# Setup paths that clients may need
#
message(STATUS "[info] SNCablingConfig.cmake: PACKAGE_CMAKE_INSTALL_BINDIR      = '@PACKAGE_CMAKE_INSTALL_BINDIR@'")
message(STATUS "[info] SNCablingConfig.cmake: PACKAGE_CMAKE_INSTALL_LIBDIR      = '@PACKAGE_CMAKE_INSTALL_LIBDIR@'")
message(STATUS "[info] SNCablingConfig.cmake: PACKAGE_CMAKE_INSTALL_INCLUDEDIR  = '@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@'")
message(STATUS "[info] SNCablingConfig.cmake: PACKAGE_CMAKE_INSTALL_DATAROOTDIR = '@PACKAGE_CMAKE_INSTALL_DATAROOTDIR@'")
set_and_check(SNCabling_INCLUDE_DIR
  "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@"
  )
message(STATUS "[info] SNCablingConfig.cmake: SNCabling_INCLUDE_DIR = '@SNCabling_INCLUDE_DIR@'")

#set_and_check(SNCabling_RESOURCE_DIR "@PACKAGE_CMAKE_INSTALL_DATAROOTDIR@/resources")

#-----------------------------------------------------------------------
# Handle paths/targets for third party deps here...

if (SNCabling_WITH_BAYEUX_DEPENDENCY)
  # - Bayeux
  # Our main dependency is Bayeux, and this will supply the main third
  # party deps for SNCabling as well
  set(SNCabling_Bayeux_VERSION @SNCabling_BAYEUX_VERSION@)
  set(Bayeux_DIR @Bayeux_CMAKE_CONFIG_DIR@)
  message(STATUS "[info] SNCablingConfig.cmake: Searching Bayeux ${SNCabling_Bayeux_VERSION} from ${Bayeux_DIR}...")
  find_package(Bayeux ${SNCabling_Bayeux_VERSION} EXACT REQUIRED NO_MODULE)
endif()

# - More boost
message(STATUS "[info] SNCablingConfig.cmake: Searching specific Boost ${SNCabling_Bayeux_VERSION} from ${Bayeux_DIR}...")
set(Boost_NO_BOOST_CMAKE ON)
set(SNCabling_Boost_VERSION    @SNCabling_Boost_VERSION@)
set(SNCabling_BOOST_COMPONENTS @SNCABLING_BOOST_COMPONENTS@)
find_package(Boost @SNCabling_Boost_VERSION@ REQUIRED
  ${SNCabling_BOOST_COMPONENTS}
  )
message(STATUS "[info] SNCablingConfig.cmake: SNCabling_Bayeux_VERSION          = ${SNCabling_Bayeux_VERSION}")
message(STATUS "[info] SNCablingConfig.cmake: SNCabling_Boost_VERSION           = ${SNCabling_Boost_VERSION}")

#-----------------------------------------------------------------------
# Include the file listing all the imported targets.
# This is installed in the same location as us...
#
if(NOT SNCabling_TARGETS_LOADED)
  include("${CMAKE_CURRENT_LIST_DIR}/SNCablingTargets.cmake")
  set(SNCabling_TARGETS_LOADED 1)
endif()

#-----------------------------------------------------------------------
# Documentation - loaded optionally as it's only present if docs were
# built
#
#include("${CMAKE_CURRENT_LIST_DIR}/SNCablingDocs.cmake" OPTIONAL)
check_required_components(SNCabling)

message(STATUS "[info] SNCablingConfig.cmake: Exiting.")

# - end